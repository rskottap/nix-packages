# Hardware configuration for work laptop
# This file should be generated by 'nixos-generate-config' on the target machine
# and then copied here, or you can manually configure it based on your hardware

{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  # TODO: Replace these with actual hardware configuration from your work laptop
  # Run 'nixos-generate-config' on the work laptop and copy the relevant sections here
  
  # Example configuration - REPLACE WITH ACTUAL VALUES:
  # Placeholder kernel modules - REPLACE WITH ACTUAL VALUES:
  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];  # Change to "kvm-amd" for AMD processors
  boot.extraModulePackages = [ ];

  # Placeholder file systems - REPLACE WITH ACTUAL VALUES:
  # These are minimal placeholders to make the configuration valid
  # You MUST replace these with actual values from your hardware
  fileSystems."/" =
    { device = "/dev/disk/by-label/nixos";  # PLACEHOLDER - replace with actual device
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-label/boot";   # PLACEHOLDER - replace with actual device
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface.
  networking.useDHCP = lib.mkDefault true;

  # Set the appropriate platform
  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";  # Change if different architecture
  
  # Enable microcode updates (choose Intel or AMD)
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
